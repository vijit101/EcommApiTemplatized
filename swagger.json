{
    "openapi": "3.0.0",
    "info": {
        "title": "Ecomm API Documentation",
        "version": "1.0.0",
        "description": "## Usage Instructions\n1. **Sign Up** - Create a new account using the /signup endpoint.\n2. **Sign In** - Authenticate with your credentials using the /signin endpoint.\n3. **Get JWT Token** - On successful login, receive a JWT token.\n4. **Authorize** - Store the token and use it for accessing protected endpoints (valid for 2 hours).\n5. **Access APIs** - Include the token in the Authorization header for endpoints requiring authentication.\n\nEcomm API Template - A comprehensive API for managing users, products, and cart operations in an e-commerce platform."
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local development server"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "User authentication and management"
        },
        {
            "name": "Products",
            "description": "Product catalog management"
        },
        {
            "name": "Cart",
            "description": "Shopping cart operations"
        }
    ],
    "paths": {
        "/api/users/signin": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "description": "Authenticate an existing user and receive a JWT token.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, JWT token returned."
                    },
                    "400": {
                        "description": "Incorrect credentials provided."
                    }
                }
            }
        },
        "/api/users/signup": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User Signup",
                "description": "Register a new user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully."
                    },
                    "400": {
                        "description": "Invalid input, registration failed."
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get All Products",
                "description": "Retrieve a list of available products.",
                "responses": {
                    "200": {
                        "description": "List of products returned."
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a Product",
                "description": "Create a new product.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully."
                    },
                    "400": {
                        "description": "Invalid input."
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get User Cart",
                "description": "Retrieve the items in the user's shopping cart.",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's cart items."
                    }
                }
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add Item to Cart",
                "description": "Add a product to the shopping cart.",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToCartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added to cart."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove Item from Cart",
                "description": "Remove an item from the cart.",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Cart item ID to be removed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed from cart."
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token for authentication."
            }
        },
        "schemas": {
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email."
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password."
                    }
                }
            },
            "SignupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Full name."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address."
                    },
                    "password": {
                        "type": "string",
                        "description": "Password."
                    },
                    "type": {
                        "type": "string",
                        "description": "User type (customer/admin)."
                    }
                }
            },
            "ProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Product name."
                    },
                    "price": {
                        "type": "number",
                        "description": "Product price."
                    },
                    "sizes": {
                        "type": "string",
                        "description": "Available sizes."
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "binary",
                        "description": "Product image."
                    }
                }
            },
            "AddToCartRequest": {
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "integer",
                        "description": "ID of the product."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity."
                    }
                }
            }
        }
    }
}